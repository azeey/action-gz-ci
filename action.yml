name: 'Ignition install'
description: ''
author: "Louise Poubel"
inputs:
  apt-dependencies:
    description: 'Dependencies to apt install'
    required: false
    default: ''
  codecov-enabled:
    description: 'Prepare the build for coverage and execute codecov'
    required: false
    default: ''
  codecov-token-private-repos:
    description: 'Token to upload to codecov in private repositories. Public repos do not need it'
    required: false
    default: ''
  codecov-token:
    description: 'DEPRECATED: use codecov-token-private if using private repositories'
    required: false
    default: ''
    deprecationMessage: 'Public repositories do not need codecov-token, use codecov-enabled to run codecov on Public repositories. To facilitate transition codecov is enabled but not using any token'
  cmake-args:
    description: 'Additional CMake arguments to use when building package under test'
    required: false
    default: ''
  doxygen-enabled:
    description: 'Run doxygen documentation checks.'
    required: false
    default: ''
  tests-enabled:
    description: 'Run tests.'
    required: false
    default: 'true'
  cpplint-enabled:
    description: 'Run cpplint'
    required: true
    default: 'false'
  cppcheck-enabled:
    description: 'Run cppcheck'
    required: false
    default: 'false'
runs:
  using: 'composite'
  steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set cores to get stored in /cores
      run: |
        sudo mkdir /cores
        # Core filenames will be of the form executable.pid.timestamp:
        sudo bash -c 'echo "/cores/%e.%p.%t" > /proc/sys/kernel/core_pattern'
        sudo chmod 777 /cores
      shell: bash
    - name: Compile and test
      run: |
        # Allow core dumps
        ulimit -c unlimited
        sudo -E ${{ github.action_path }}/entrypoint.sh "${{ inputs.apt-dependencies }}" "${{ inputs.codecov-enabled }}" "${{ inputs.codecov-token-private-repos }}" "${{ inputs.codecov-token }}" "${{ inputs.cmake-args }}" "${{ inputs.doxygen-enabled }}" "${{ inputs.tests-enabled }}" "${{ inputs.cpplint-enabled }}" "${{ inputs.cppcheck-enabled }}"
        sudo chmod 777 /cores
      shell: bash
    - uses: actions/upload-artifact@v3
      if: ${{ failure() }}  # Run only if something went wrong
      with:
        name: "${{ github.job }} Core Dumps"
        path: /cores
